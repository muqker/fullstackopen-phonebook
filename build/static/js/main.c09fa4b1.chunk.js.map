{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/contacts.js","App.js","index.js"],"names":["Filter","filter","setFilter","value","onChange","event","target","PersonForm","newName","newNumber","setNewName","setNewNumber","persons","handleUpdatePerson","handleAddPerson","onSubmit","preventDefault","existingPerson","find","person","name","console","log","undefined","window","confirm","id","number","type","Persons","handleDelete","toLowerCase","includes","map","key","onClick","Notification","notification","className","message","baseUrl","result","axios","get","then","response","data","delete","put","post","App","useState","setPersons","setNotification","useEffect","contactService","newPersons","fireNotification","setTimeout","newPerson","updatedPerson","catch","error","addedPerson","concat","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c09fa4b1.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filter, setFilter}) => {\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }      \n\n  return (\n    <div>\n      filter shown with: <input value={filter} onChange={handleFilterChange}/>\n    </div> \n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({\n  newName, newNumber, \n  setNewName, setNewNumber,\n  persons, handleUpdatePerson, handleAddPerson\n}) => {\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const existingPerson = persons.find(person => newName === person.name)\n    console.log(existingPerson)\n    if (existingPerson !== undefined) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`))\n        handleUpdatePerson({id: existingPerson.id, name: newName, number: newNumber})\n    } else {\n      handleAddPerson({name: newName, number: newNumber})\n    }\n  }\n\n  return (\n    <form onSubmit={addName}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange}/>\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Persons = ({persons, filter, handleDelete}) => {\n  return (\n    <div>\n      {persons.filter(\n        // not using regex as the user may unintentionally inject regex in the filter\n        person => person.name.toLowerCase().includes(filter.toLowerCase())\n      ).map(\n        person => \n          <p key={person.id}>\n            {person.name} {person.number} \n            <button onClick={() => handleDelete(person.id)}>delete</button>\n          </p> \n      )}\n    </div>\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({notification}) => {\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div className={notification.type}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const result = axios.get(baseUrl).then(response => response.data)\n  console.log(result)\n  return result\n}\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst update = person => {\n  return axios.put(`${baseUrl}/${person.id}`, person).then(response => response.data)\n}\n\nconst add = person => {\n  return axios.post(`${baseUrl}`, person).then(response => response.data)\n}\n\nexport default {getAll, remove, update, add}\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport contactService from './services/contacts'\nimport './index.css'\n\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    contactService.getAll().then(newPersons => setPersons(newPersons))\n  }, [])\n\n  const handleDelete = id => {\n    const deletedPerson = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${deletedPerson.name}?`)) {\n      contactService.remove(id).then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n        fireNotification({\n          type: 'success', \n          message: `Deleted ${deletedPerson.name}`\n        })        \n      })\n    }\n  }\n\n  const handleUpdatePerson = newPerson => {\n    contactService.update(newPerson)\n      .then(updatedPerson => {\n        setPersons(persons.map(person => person.id === updatedPerson.id ? updatedPerson : person))\n        fireNotification({\n          type: 'success', \n          message: `Updated ${newPerson.name}`\n        })\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {console.log(error.response.data)\n        fireNotification({\n          type: 'error', \n          message: error.response.data.error\n        })}\n      )\n  }\n\n  const handleAddPerson = newPerson => {\n    contactService.add(newPerson)\n      .then(addedPerson => {\n        setPersons(persons.concat(addedPerson))\n        fireNotification({\n          type: 'success', \n          message: `Added ${addedPerson.name}`\n        })\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {console.log(error.response.data)\n        fireNotification({\n          type: 'error', \n          message: error.response.data.error\n        })}\n      )\n  }\n\n  const fireNotification = (notification) => {\n    setNotification(notification)\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={notification} />\n      <Filter filter={filter} setFilter={setFilter} />\n      <h2>add a new</h2>\n      <PersonForm \n        newName={newName} setNewName={setNewName}\n        newNumber={newNumber} setNewNumber={setNewNumber}\n        persons={persons} \n        handleUpdatePerson={handleUpdatePerson} handleAddPerson={handleAddPerson} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}